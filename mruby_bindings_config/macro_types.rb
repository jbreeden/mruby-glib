CTypes.set_macro_type('G_MININT8', CTypes['int'])
CTypes.set_macro_type('G_MAXINT8', CTypes['int'])
CTypes.set_macro_type('G_MAXUINT8', CTypes['int'])
CTypes.set_macro_type('G_MININT16', CTypes['int'])
CTypes.set_macro_type('G_MAXINT16', CTypes['int'])
CTypes.set_macro_type('G_MAXUINT16', CTypes['int'])
CTypes.set_macro_type('G_MININT32', CTypes['int'])
CTypes.set_macro_type('G_MAXINT32', CTypes['int'])
CTypes.set_macro_type('G_MAXUINT32', CTypes['int'])
CTypes.set_macro_type('G_MININT64', CTypes['int'])
CTypes.set_macro_type('G_MAXINT64', CTypes['int'])
CTypes.set_macro_type('G_MAXUINT64', CTypes['int'])
CTypes.set_macro_type('G_E', CTypes['float'])
CTypes.set_macro_type('G_LN2', CTypes['float'])
CTypes.set_macro_type('G_LN10', CTypes['float'])
CTypes.set_macro_type('G_PI', CTypes['float'])
CTypes.set_macro_type('G_PI_2', CTypes['float'])
CTypes.set_macro_type('G_PI_4', CTypes['float'])
CTypes.set_macro_type('G_SQRT2', CTypes['float'])
CTypes.set_macro_type('G_LITTLE_ENDIAN', CTypes['int'])
CTypes.set_macro_type('G_BIG_ENDIAN', CTypes['int'])
CTypes.set_macro_type('G_PDP_ENDIAN', CTypes['int'])
CTypes.set_macro_type('GUINT16_SWAP_LE_BE_CONSTANT', CTypes['ignore'])
CTypes.set_macro_type('GUINT32_SWAP_LE_BE_CONSTANT', CTypes['ignore'])
CTypes.set_macro_type('GUINT64_SWAP_LE_BE_CONSTANT', CTypes['ignore'])
CTypes.set_macro_type('GUINT16_SWAP_LE_BE', CTypes['ignore'])
CTypes.set_macro_type('GUINT32_SWAP_LE_BE', CTypes['ignore'])
CTypes.set_macro_type('GUINT64_SWAP_LE_BE', CTypes['ignore'])
CTypes.set_macro_type('GUINT16_SWAP_LE_PDP', CTypes['ignore'])
CTypes.set_macro_type('GUINT16_SWAP_BE_PDP', CTypes['ignore'])
CTypes.set_macro_type('GUINT32_SWAP_LE_PDP', CTypes['ignore'])
CTypes.set_macro_type('GUINT32_SWAP_BE_PDP', CTypes['ignore'])
CTypes.set_macro_type('GINT16_FROM_LE', CTypes['ignore'])
CTypes.set_macro_type('GUINT16_FROM_LE', CTypes['ignore'])
CTypes.set_macro_type('GINT16_FROM_BE', CTypes['ignore'])
CTypes.set_macro_type('GUINT16_FROM_BE', CTypes['ignore'])
CTypes.set_macro_type('GINT32_FROM_LE', CTypes['ignore'])
CTypes.set_macro_type('GUINT32_FROM_LE', CTypes['ignore'])
CTypes.set_macro_type('GINT32_FROM_BE', CTypes['ignore'])
CTypes.set_macro_type('GUINT32_FROM_BE', CTypes['ignore'])
CTypes.set_macro_type('GINT64_FROM_LE', CTypes['ignore'])
CTypes.set_macro_type('GUINT64_FROM_LE', CTypes['ignore'])
CTypes.set_macro_type('GINT64_FROM_BE', CTypes['ignore'])
CTypes.set_macro_type('GUINT64_FROM_BE', CTypes['ignore'])
CTypes.set_macro_type('GLONG_FROM_LE', CTypes['ignore'])
CTypes.set_macro_type('GULONG_FROM_LE', CTypes['ignore'])
CTypes.set_macro_type('GLONG_FROM_BE', CTypes['ignore'])
CTypes.set_macro_type('GULONG_FROM_BE', CTypes['ignore'])
CTypes.set_macro_type('GINT_FROM_LE', CTypes['ignore'])
CTypes.set_macro_type('GUINT_FROM_LE', CTypes['ignore'])
CTypes.set_macro_type('GINT_FROM_BE', CTypes['ignore'])
CTypes.set_macro_type('GUINT_FROM_BE', CTypes['ignore'])
CTypes.set_macro_type('GSIZE_FROM_LE', CTypes['ignore'])
CTypes.set_macro_type('GSSIZE_FROM_LE', CTypes['ignore'])
CTypes.set_macro_type('GSIZE_FROM_BE', CTypes['ignore'])
CTypes.set_macro_type('GSSIZE_FROM_BE', CTypes['ignore'])
CTypes.set_macro_type('g_ntohl', CTypes['ignore'])
CTypes.set_macro_type('g_ntohs', CTypes['ignore'])
CTypes.set_macro_type('g_htonl', CTypes['ignore'])
CTypes.set_macro_type('g_htons', CTypes['ignore'])
CTypes.set_macro_type('G_IEEE754_FLOAT_BIAS', CTypes['int'])
CTypes.set_macro_type('G_IEEE754_DOUBLE_BIAS', CTypes['int'])
CTypes.set_macro_type('G_LOG_2_BASE_10', CTypes['float'])
CTypes.set_macro_type('GLIB_VAR', CTypes['ignore'])
CTypes.set_macro_type('alloca', CTypes['ignore'])
CTypes.set_macro_type('g_alloca', CTypes['ignore'])
CTypes.set_macro_type('g_newa', CTypes['ignore'])
CTypes.set_macro_type('g_array_append_val', CTypes['ignore'])
CTypes.set_macro_type('g_array_prepend_val', CTypes['ignore'])
CTypes.set_macro_type('g_array_insert_val', CTypes['ignore'])
CTypes.set_macro_type('g_array_index', CTypes['ignore'])
CTypes.set_macro_type('g_ptr_array_index', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_int_get', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_int_set', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_pointer_get', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_pointer_set', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_int_inc', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_int_dec_and_test', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_int_compare_and_exchange', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_int_add', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_int_and', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_int_or', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_int_xor', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_pointer_compare_and_exchange', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_pointer_add', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_pointer_and', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_pointer_or', CTypes['ignore'])
CTypes.set_macro_type('g_atomic_pointer_xor', CTypes['ignore'])
CTypes.set_macro_type('G_BREAKPOINT', CTypes['ignore'])
CTypes.set_macro_type('g_pointer_bit_lock', CTypes['ignore'])
CTypes.set_macro_type('g_pointer_bit_trylock', CTypes['ignore'])
CTypes.set_macro_type('g_pointer_bit_unlock', CTypes['ignore'])
CTypes.set_macro_type('G_BOOKMARK_FILE_ERROR', CTypes['int'])
CTypes.set_macro_type('G_CONVERT_ERROR', CTypes['int'])
CTypes.set_macro_type('G_DATALIST_FLAGS_MASK', CTypes['int'])
CTypes.set_macro_type('g_datalist_id_set_data', CTypes['ignore'])
CTypes.set_macro_type('g_datalist_id_remove_data', CTypes['ignore'])
CTypes.set_macro_type('g_datalist_set_data_full', CTypes['ignore'])
CTypes.set_macro_type('g_datalist_remove_no_notify', CTypes['ignore'])
CTypes.set_macro_type('g_datalist_set_data', CTypes['ignore'])
CTypes.set_macro_type('g_datalist_remove_data', CTypes['ignore'])
CTypes.set_macro_type('g_dataset_id_set_data', CTypes['ignore'])
CTypes.set_macro_type('g_dataset_id_remove_data', CTypes['ignore'])
CTypes.set_macro_type('g_dataset_get_data', CTypes['ignore'])
CTypes.set_macro_type('g_dataset_set_data_full', CTypes['ignore'])
CTypes.set_macro_type('g_dataset_remove_no_notify', CTypes['ignore'])
CTypes.set_macro_type('g_dataset_set_data', CTypes['ignore'])
CTypes.set_macro_type('g_dataset_remove_data', CTypes['ignore'])
CTypes.set_macro_type('G_DATE_BAD_JULIAN', CTypes['int'])
CTypes.set_macro_type('G_DATE_BAD_DAY', CTypes['int'])
CTypes.set_macro_type('G_DATE_BAD_YEAR', CTypes['int'])
CTypes.set_macro_type('g_date_weekday', CTypes['ignore'])
CTypes.set_macro_type('g_date_month', CTypes['ignore'])
CTypes.set_macro_type('g_date_year', CTypes['ignore'])
CTypes.set_macro_type('g_date_day', CTypes['ignore'])
CTypes.set_macro_type('g_date_julian', CTypes['ignore'])
CTypes.set_macro_type('g_date_day_of_year', CTypes['ignore'])
CTypes.set_macro_type('g_date_monday_week_of_year', CTypes['ignore'])
CTypes.set_macro_type('g_date_sunday_week_of_year', CTypes['ignore'])
CTypes.set_macro_type('g_date_days_in_month', CTypes['ignore'])
CTypes.set_macro_type('g_date_monday_weeks_in_year', CTypes['ignore'])
CTypes.set_macro_type('g_date_sunday_weeks_in_year', CTypes['ignore'])
CTypes.set_macro_type('G_TIME_SPAN_DAY', CTypes['ignore'])
CTypes.set_macro_type('G_TIME_SPAN_HOUR', CTypes['ignore'])
CTypes.set_macro_type('G_TIME_SPAN_MINUTE', CTypes['ignore'])
CTypes.set_macro_type('G_TIME_SPAN_SECOND', CTypes['ignore'])
CTypes.set_macro_type('G_TIME_SPAN_MILLISECOND', CTypes['ignore'])
CTypes.set_macro_type('G_FILE_ERROR', CTypes['ignore'])
CTypes.set_macro_type('G_DIR_SEPARATOR', CTypes['int'])
CTypes.set_macro_type('G_DIR_SEPARATOR_S', CTypes['const char *'])
CTypes.set_macro_type('G_IS_DIR_SEPARATOR', CTypes['ignore'])
CTypes.set_macro_type('G_SEARCHPATH_SEPARATOR', CTypes['int'])
CTypes.set_macro_type('G_SEARCHPATH_SEPARATOR_S', CTypes['int'])
CTypes.set_macro_type('g_dirname', CTypes['ignore'])
CTypes.set_macro_type('g_hash_table_freeze', CTypes['ignore'])
CTypes.set_macro_type('g_hash_table_thaw', CTypes['ignore'])
CTypes.set_macro_type('G_HOOK_FLAG_USER_SHIFT', CTypes['int'])
CTypes.set_macro_type('G_HOOK', CTypes['ignore'])
CTypes.set_macro_type('G_HOOK_FLAGS', CTypes['ignore'])
CTypes.set_macro_type('G_HOOK_ACTIVE', CTypes['ignore'])
CTypes.set_macro_type('G_HOOK_IN_CALL', CTypes['ignore'])
CTypes.set_macro_type('G_HOOK_IS_VALID', CTypes['ignore'])
CTypes.set_macro_type('G_HOOK_IS_UNLINKED', CTypes['ignore'])
CTypes.set_macro_type('g_hook_append', CTypes['ignore'])
CTypes.set_macro_type('G_IO_CHANNEL_ERROR', CTypes['int'])
CTypes.set_macro_type('G_KEY_FILE_ERROR', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_GROUP', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_TYPE', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_VERSION', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_NAME', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_COMMENT', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_ICON', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_HIDDEN', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_TRY_EXEC', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_EXEC', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_PATH', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_TERMINAL', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_MIME_TYPE', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_CATEGORIES', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_URL', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_KEY_ACTIONS', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_TYPE_APPLICATION', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_TYPE_LINK', CTypes['const char *'])
CTypes.set_macro_type('G_KEY_FILE_DESKTOP_TYPE_DIRECTORY', CTypes['const char *'])
CTypes.set_macro_type('g_list_free1', CTypes['ignore'])
CTypes.set_macro_type('g_list_previous', CTypes['ignore'])
CTypes.set_macro_type('g_list_next', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_EXTENSION', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_PURE', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_MALLOC', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_NULL_TERMINATED', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_PRINTF', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_SCANF', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_FORMAT', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_NORETURN', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_CONST', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_UNUSED', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_NO_INSTRUMENT', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_DEPRECATED', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_DEPRECATED_FOR', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_BEGIN_IGNORE_DEPRECATIONS', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_END_IGNORE_DEPRECATIONS', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_MAY_ALIAS', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_WARN_UNUSED_RESULT', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_FUNCTION', CTypes['ignore'])
CTypes.set_macro_type('G_GNUC_PRETTY_FUNCTION', CTypes['ignore'])
CTypes.set_macro_type('G_ANALYZER_ANALYZING', CTypes['ignore'])
CTypes.set_macro_type('G_STRINGIFY', CTypes['ignore'])
CTypes.set_macro_type('G_STRINGIFY_ARG', CTypes['ignore'])
CTypes.set_macro_type('G_PASTE_ARGS', CTypes['ignore'])
CTypes.set_macro_type('G_PASTE', CTypes['ignore'])
CTypes.set_macro_type('G_STATIC_ASSERT', CTypes['ignore'])
CTypes.set_macro_type('G_STATIC_ASSERT_EXPR', CTypes['ignore'])
CTypes.set_macro_type('G_STRLOC', CTypes['ignore'])
CTypes.set_macro_type('G_STRFUNC', CTypes['ignore'])
CTypes.set_macro_type('FALSE', CTypes['bool'])
CTypes.set_macro_type('TRUE', CTypes['bool'])
CTypes.set_macro_type('MAX', CTypes['ignore'])
CTypes.set_macro_type('MIN', CTypes['ignore'])
CTypes.set_macro_type('ABS', CTypes['ignore'])
CTypes.set_macro_type('CLAMP', CTypes['ignore'])
CTypes.set_macro_type('G_N_ELEMENTS', CTypes['ignore'])
CTypes.set_macro_type('GPOINTER_TO_SIZE', CTypes['ignore'])
CTypes.set_macro_type('GSIZE_TO_POINTER', CTypes['ignore'])
CTypes.set_macro_type('G_STRUCT_OFFSET', CTypes['ignore'])
CTypes.set_macro_type('G_STRUCT_MEMBER_P', CTypes['ignore'])
CTypes.set_macro_type('G_STRUCT_MEMBER', CTypes['ignore'])
CTypes.set_macro_type('G_STMT_START', CTypes['ignore'])
CTypes.set_macro_type('G_STMT_END', CTypes['ignore'])
CTypes.set_macro_type('G_CONST_RETURN', CTypes['ignore'])
CTypes.set_macro_type('G_LIKELY', CTypes['ignore'])
CTypes.set_macro_type('G_UNLIKELY', CTypes['ignore'])
CTypes.set_macro_type('G_DEPRECATED', CTypes['ignore'])
CTypes.set_macro_type('G_DEPRECATED_FOR', CTypes['ignore'])
CTypes.set_macro_type('G_UNAVAILABLE', CTypes['ignore'])
CTypes.set_macro_type('_GLIB_EXTERN', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_FOR', CTypes['ignore'])
CTypes.set_macro_type('GLIB_UNAVAILABLE', CTypes['ignore'])
CTypes.set_macro_type('_GLIB_AUTOPTR_FUNC_NAME', CTypes['ignore'])
CTypes.set_macro_type('_GLIB_AUTOPTR_TYPENAME', CTypes['ignore'])
CTypes.set_macro_type('_GLIB_AUTO_FUNC_NAME', CTypes['ignore'])
CTypes.set_macro_type('_GLIB_CLEANUP', CTypes['ignore'])
CTypes.set_macro_type('_GLIB_DEFINE_AUTOPTR_CHAINUP', CTypes['ignore'])
CTypes.set_macro_type('G_DEFINE_AUTOPTR_CLEANUP_FUNC', CTypes['ignore'])
CTypes.set_macro_type('G_DEFINE_AUTO_CLEANUP_CLEAR_FUNC', CTypes['ignore'])
CTypes.set_macro_type('G_DEFINE_AUTO_CLEANUP_FREE_FUNC', CTypes['ignore'])
CTypes.set_macro_type('g_autoptr', CTypes['ignore'])
CTypes.set_macro_type('g_auto', CTypes['ignore'])
CTypes.set_macro_type('g_autofree', CTypes['ignore'])
CTypes.set_macro_type('G_PRIORITY_HIGH', CTypes['int'])
CTypes.set_macro_type('G_PRIORITY_DEFAULT', CTypes['int'])
CTypes.set_macro_type('G_PRIORITY_HIGH_IDLE', CTypes['int'])
CTypes.set_macro_type('G_PRIORITY_DEFAULT_IDLE', CTypes['int'])
CTypes.set_macro_type('G_PRIORITY_LOW', CTypes['int'])
CTypes.set_macro_type('G_SOURCE_REMOVE', CTypes['ignore'])
CTypes.set_macro_type('G_SOURCE_CONTINUE', CTypes['ignore'])
CTypes.set_macro_type('G_MARKUP_ERROR', CTypes['ignore'])
CTypes.set_macro_type('G_MEM_ALIGN', CTypes['ignore'])
CTypes.set_macro_type('g_clear_pointer', CTypes['ignore'])
CTypes.set_macro_type('g_steal_pointer', CTypes['ignore'])
CTypes.set_macro_type('_G_NEW', CTypes['ignore'])
CTypes.set_macro_type('_G_RENEW', CTypes['ignore'])
CTypes.set_macro_type('g_new', CTypes['ignore'])
CTypes.set_macro_type('g_new0', CTypes['ignore'])
CTypes.set_macro_type('g_renew', CTypes['ignore'])
CTypes.set_macro_type('g_try_new', CTypes['ignore'])
CTypes.set_macro_type('g_try_new0', CTypes['ignore'])
CTypes.set_macro_type('g_try_renew', CTypes['ignore'])
CTypes.set_macro_type('G_LOG_LEVEL_USER_SHIFT', CTypes['int'])
CTypes.set_macro_type('G_LOG_FATAL_MASK', CTypes['int'])
CTypes.set_macro_type('G_LOG_DOMAIN', CTypes['int'])
CTypes.set_macro_type('g_error', CTypes['ignore'])
CTypes.set_macro_type('g_message', CTypes['ignore'])
CTypes.set_macro_type('g_critical', CTypes['ignore'])
CTypes.set_macro_type('g_warning', CTypes['ignore'])
CTypes.set_macro_type('g_info', CTypes['ignore'])
CTypes.set_macro_type('g_debug', CTypes['ignore'])
CTypes.set_macro_type('g_warn_if_reached', CTypes['ignore'])
CTypes.set_macro_type('g_warn_if_fail', CTypes['ignore'])
CTypes.set_macro_type('g_return_if_fail', CTypes['ignore'])
CTypes.set_macro_type('g_return_val_if_fail', CTypes['ignore'])
CTypes.set_macro_type('g_return_if_reached', CTypes['ignore'])
CTypes.set_macro_type('g_return_val_if_reached', CTypes['ignore'])
CTypes.set_macro_type('G_NODE_IS_ROOT', CTypes['ignore'])
CTypes.set_macro_type('G_NODE_IS_LEAF', CTypes['ignore'])
CTypes.set_macro_type('g_node_append', CTypes['ignore'])
CTypes.set_macro_type('g_node_insert_data', CTypes['ignore'])
CTypes.set_macro_type('g_node_insert_data_after', CTypes['ignore'])
CTypes.set_macro_type('g_node_insert_data_before', CTypes['ignore'])
CTypes.set_macro_type('g_node_prepend_data', CTypes['ignore'])
CTypes.set_macro_type('g_node_append_data', CTypes['ignore'])
CTypes.set_macro_type('g_node_prev_sibling', CTypes['ignore'])
CTypes.set_macro_type('g_node_next_sibling', CTypes['ignore'])
CTypes.set_macro_type('g_node_first_child', CTypes['ignore'])
CTypes.set_macro_type('G_OPTION_ERROR', CTypes['int'])
CTypes.set_macro_type('G_OPTION_REMAINING', CTypes['int'])
CTypes.set_macro_type('G_POLLFD_FORMAT', CTypes['const char *'])
CTypes.set_macro_type('G_DEFINE_QUARK', CTypes['ignore'])
CTypes.set_macro_type('G_QUEUE_INIT', CTypes['ignore'])
CTypes.set_macro_type('g_rand_boolean', CTypes['ignore'])
CTypes.set_macro_type('g_random_boolean', CTypes['ignore'])
CTypes.set_macro_type('G_REGEX_ERROR', CTypes['int'])
CTypes.set_macro_type('G_CSET_A_2_Z', CTypes['ignore'])
CTypes.set_macro_type('G_CSET_a_2_z', CTypes['ignore'])
CTypes.set_macro_type('G_CSET_DIGITS', CTypes['ignore'])
CTypes.set_macro_type('G_CSET_LATINC', CTypes['ignore'])
CTypes.set_macro_type('G_CSET_LATINS', CTypes['ignore'])
CTypes.set_macro_type('g_scanner_add_symbol', CTypes['ignore'])
CTypes.set_macro_type('g_scanner_remove_symbol', CTypes['ignore'])
CTypes.set_macro_type('g_scanner_foreach_symbol', CTypes['ignore'])
CTypes.set_macro_type('g_scanner_freeze_symbol_table', CTypes['ignore'])
CTypes.set_macro_type('g_scanner_thaw_symbol_table', CTypes['ignore'])
CTypes.set_macro_type('G_SHELL_ERROR', CTypes['int'])
CTypes.set_macro_type('g_slice_new', CTypes['ignore'])
CTypes.set_macro_type('g_slice_new0', CTypes['ignore'])
CTypes.set_macro_type('g_slice_dup', CTypes['ignore'])
CTypes.set_macro_type('g_slice_free', CTypes['ignore'])
CTypes.set_macro_type('g_slice_free_chain', CTypes['ignore'])
CTypes.set_macro_type('g_slist_free1', CTypes['ignore'])
CTypes.set_macro_type('g_slist_next', CTypes['ignore'])
CTypes.set_macro_type('G_SPAWN_ERROR', CTypes['int'])
CTypes.set_macro_type('G_SPAWN_EXIT_ERROR', CTypes['int'])
CTypes.set_macro_type('g_ascii_isalnum', CTypes['ignore'])
CTypes.set_macro_type('g_ascii_isalpha', CTypes['ignore'])
CTypes.set_macro_type('g_ascii_iscntrl', CTypes['ignore'])
CTypes.set_macro_type('g_ascii_isdigit', CTypes['ignore'])
CTypes.set_macro_type('g_ascii_isgraph', CTypes['ignore'])
CTypes.set_macro_type('g_ascii_islower', CTypes['ignore'])
CTypes.set_macro_type('g_ascii_isprint', CTypes['ignore'])
CTypes.set_macro_type('g_ascii_ispunct', CTypes['ignore'])
CTypes.set_macro_type('g_ascii_isspace', CTypes['ignore'])
CTypes.set_macro_type('g_ascii_isupper', CTypes['ignore'])
CTypes.set_macro_type('g_ascii_isxdigit', CTypes['ignore'])
CTypes.set_macro_type('G_STR_DELIMITERS', CTypes['const char *'])
CTypes.set_macro_type('G_ASCII_DTOSTR_BUF_SIZE', CTypes['int'])
CTypes.set_macro_type('g_strstrip', CTypes['ignore'])
CTypes.set_macro_type('g_string_append_c', CTypes['ignore'])
CTypes.set_macro_type('g_string_sprintf', CTypes['ignore'])
CTypes.set_macro_type('g_string_sprintfa', CTypes['ignore'])
CTypes.set_macro_type('g_assert_cmpstr', CTypes['ignore'])
CTypes.set_macro_type('g_assert_cmpint', CTypes['ignore'])
CTypes.set_macro_type('g_assert_cmpuint', CTypes['ignore'])
CTypes.set_macro_type('g_assert_cmphex', CTypes['ignore'])
CTypes.set_macro_type('g_assert_cmpfloat', CTypes['ignore'])
CTypes.set_macro_type('g_assert_cmpmem', CTypes['ignore'])
CTypes.set_macro_type('g_assert_no_error', CTypes['ignore'])
CTypes.set_macro_type('g_assert_error', CTypes['ignore'])
CTypes.set_macro_type('g_assert_true', CTypes['ignore'])
CTypes.set_macro_type('g_assert_false', CTypes['ignore'])
CTypes.set_macro_type('g_assert_null', CTypes['ignore'])
CTypes.set_macro_type('g_assert_nonnull', CTypes['ignore'])
CTypes.set_macro_type('g_assert_not_reached', CTypes['ignore'])
CTypes.set_macro_type('g_assert', CTypes['ignore'])
CTypes.set_macro_type('g_test_initialized', CTypes['ignore'])
CTypes.set_macro_type('g_test_quick', CTypes['ignore'])
CTypes.set_macro_type('g_test_slow', CTypes['ignore'])
CTypes.set_macro_type('g_test_thorough', CTypes['ignore'])
CTypes.set_macro_type('g_test_perf', CTypes['ignore'])
CTypes.set_macro_type('g_test_verbose', CTypes['ignore'])
CTypes.set_macro_type('g_test_quiet', CTypes['ignore'])
CTypes.set_macro_type('g_test_undefined', CTypes['ignore'])
CTypes.set_macro_type('g_test_add', CTypes['ignore'])
CTypes.set_macro_type('g_test_queue_unref', CTypes['ignore'])
CTypes.set_macro_type('g_test_trap_assert_passed', CTypes['ignore'])
CTypes.set_macro_type('g_test_trap_assert_failed', CTypes['ignore'])
CTypes.set_macro_type('g_test_trap_assert_stdout', CTypes['ignore'])
CTypes.set_macro_type('g_test_trap_assert_stdout_unmatched', CTypes['ignore'])
CTypes.set_macro_type('g_test_trap_assert_stderr', CTypes['ignore'])
CTypes.set_macro_type('g_test_trap_assert_stderr_unmatched', CTypes['ignore'])
CTypes.set_macro_type('g_test_rand_bit', CTypes['ignore'])
CTypes.set_macro_type('g_test_assert_expected_messages', CTypes['ignore'])
CTypes.set_macro_type('G_THREAD_ERROR', CTypes['int'])
CTypes.set_macro_type('G_PRIVATE_INIT', CTypes['ignore'])
CTypes.set_macro_type('G_ONCE_INIT', CTypes['ignore'])
CTypes.set_macro_type('G_LOCK_NAME', CTypes['ignore'])
CTypes.set_macro_type('G_LOCK_DEFINE_STATIC', CTypes['ignore'])
CTypes.set_macro_type('G_LOCK_DEFINE', CTypes['ignore'])
CTypes.set_macro_type('G_LOCK_EXTERN', CTypes['ignore'])
CTypes.set_macro_type('G_LOCK', CTypes['ignore'])
CTypes.set_macro_type('G_UNLOCK', CTypes['ignore'])
CTypes.set_macro_type('G_TRYLOCK', CTypes['ignore'])
CTypes.set_macro_type('g_once', CTypes['ignore'])
CTypes.set_macro_type('g_once_init_enter', CTypes['ignore'])
CTypes.set_macro_type('g_once_init_leave', CTypes['ignore'])
CTypes.set_macro_type('G_USEC_PER_SEC', CTypes['ignore'])
CTypes.set_macro_type('G_UNICODE_COMBINING_MARK', CTypes['ignore'])
CTypes.set_macro_type('G_UNICHAR_MAX_DECOMPOSITION_LENGTH', CTypes['ignore'])
CTypes.set_macro_type('g_utf8_next_char', CTypes['ignore'])
CTypes.set_macro_type('G_URI_RESERVED_CHARS_GENERIC_DELIMITERS', CTypes['ignore'])
CTypes.set_macro_type('G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS', CTypes['ignore'])
CTypes.set_macro_type('G_URI_RESERVED_CHARS_ALLOWED_IN_PATH_ELEMENT', CTypes['ignore'])
CTypes.set_macro_type('G_URI_RESERVED_CHARS_ALLOWED_IN_PATH', CTypes['ignore'])
CTypes.set_macro_type('G_URI_RESERVED_CHARS_ALLOWED_IN_USERINFO', CTypes['ignore'])
CTypes.set_macro_type('G_INLINE_FUNC', CTypes['ignore'])
CTypes.set_macro_type('ATEXIT', CTypes['ignore'])
CTypes.set_macro_type('G_WIN32_DLLMAIN_FOR_DLL_NAME', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_BOOLEAN', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_BYTE', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_INT16', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_UINT16', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_INT32', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_UINT32', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_INT64', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_UINT64', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_DOUBLE', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_STRING', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_OBJECT_PATH', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_SIGNATURE', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_VARIANT', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_HANDLE', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_UNIT', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_ANY', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_BASIC', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_MAYBE', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_ARRAY', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_TUPLE', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_DICT_ENTRY', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_DICTIONARY', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_STRING_ARRAY', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_OBJECT_PATH_ARRAY', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_BYTESTRING', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_BYTESTRING_ARRAY', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE_VARDICT', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_TYPE', CTypes['ignore'])
CTypes.set_macro_type('G_VARIANT_PARSE_ERROR', CTypes['ignore'])
CTypes.set_macro_type('GLIB_CHECK_VERSION', CTypes['ignore'])
CTypes.set_macro_type('G_ENCODE_VERSION', CTypes['ignore'])
CTypes.set_macro_type('GLIB_VERSION_2_26', CTypes['ignore'])
CTypes.set_macro_type('GLIB_VERSION_2_28', CTypes['ignore'])
CTypes.set_macro_type('GLIB_VERSION_2_30', CTypes['ignore'])
CTypes.set_macro_type('GLIB_VERSION_2_32', CTypes['ignore'])
CTypes.set_macro_type('GLIB_VERSION_2_34', CTypes['ignore'])
CTypes.set_macro_type('GLIB_VERSION_2_36', CTypes['ignore'])
CTypes.set_macro_type('GLIB_VERSION_2_38', CTypes['ignore'])
CTypes.set_macro_type('GLIB_VERSION_2_40', CTypes['ignore'])
CTypes.set_macro_type('GLIB_VERSION_2_42', CTypes['ignore'])
CTypes.set_macro_type('GLIB_VERSION_2_44', CTypes['ignore'])
CTypes.set_macro_type('GLIB_VERSION_2_46', CTypes['ignore'])
CTypes.set_macro_type('GLIB_VERSION_CUR_STABLE', CTypes['ignore'])
CTypes.set_macro_type('GLIB_VERSION_PREV_STABLE', CTypes['ignore'])
CTypes.set_macro_type('GLIB_VERSION_MIN_REQUIRED', CTypes['ignore'])
CTypes.set_macro_type('GLIB_VERSION_MAX_ALLOWED', CTypes['ignore'])
CTypes.set_macro_type('GLIB_AVAILABLE_IN_ALL', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_26', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_26_FOR', CTypes['ignore'])
CTypes.set_macro_type('GLIB_AVAILABLE_IN_2_26', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_28', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_28_FOR', CTypes['ignore'])
CTypes.set_macro_type('GLIB_AVAILABLE_IN_2_28', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_30', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_30_FOR', CTypes['ignore'])
CTypes.set_macro_type('GLIB_AVAILABLE_IN_2_30', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_32', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_32_FOR', CTypes['ignore'])
CTypes.set_macro_type('GLIB_AVAILABLE_IN_2_32', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_34', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_34_FOR', CTypes['ignore'])
CTypes.set_macro_type('GLIB_AVAILABLE_IN_2_34', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_36', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_36_FOR', CTypes['ignore'])
CTypes.set_macro_type('GLIB_AVAILABLE_IN_2_36', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_38', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_38_FOR', CTypes['ignore'])
CTypes.set_macro_type('GLIB_AVAILABLE_IN_2_38', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_40', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_40_FOR', CTypes['ignore'])
CTypes.set_macro_type('GLIB_AVAILABLE_IN_2_40', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_42', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_42_FOR', CTypes['ignore'])
CTypes.set_macro_type('GLIB_AVAILABLE_IN_2_42', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_44', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_44_FOR', CTypes['ignore'])
CTypes.set_macro_type('GLIB_AVAILABLE_IN_2_44', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_46', CTypes['ignore'])
CTypes.set_macro_type('GLIB_DEPRECATED_IN_2_46_FOR', CTypes['ignore'])
CTypes.set_macro_type('GLIB_AVAILABLE_IN_2_46', CTypes['ignore'])
CTypes.set_macro_type('_', CTypes['ignore'])
CTypes.set_macro_type('Q_', CTypes['ignore'])
CTypes.set_macro_type('N_', CTypes['ignore'])
CTypes.set_macro_type('C_', CTypes['ignore'])
CTypes.set_macro_type('NC_', CTypes['ignore'])
CTypes.set_macro_type('g_chmod', CTypes['ignore'])
CTypes.set_macro_type('g_open', CTypes['ignore'])
CTypes.set_macro_type('g_creat', CTypes['ignore'])
CTypes.set_macro_type('g_rename', CTypes['ignore'])
CTypes.set_macro_type('g_mkdir', CTypes['ignore'])
CTypes.set_macro_type('g_stat', CTypes['ignore'])
CTypes.set_macro_type('g_lstat', CTypes['ignore'])
CTypes.set_macro_type('g_remove', CTypes['ignore'])
CTypes.set_macro_type('g_fopen', CTypes['ignore'])
CTypes.set_macro_type('g_freopen', CTypes['ignore'])
CTypes.set_macro_type('g_utime', CTypes['ignore'])
